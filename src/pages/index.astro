---
import {Debug} from 'astro/components';
import { getCollection} from 'astro:content';
// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';
import Socials from '../components/Socials.astro';
import Icon from '../components/Icon.astro';
import { getSortedProjects } from '../utils/contentCollections';


// put the projects in a global variable so we can use it in the script tag
const projects = await getSortedProjects();

---
<BaseLayout>
	<section class='hero'>
		<div class='hero-container'>
			<h1 class='hero-title'>Jonathan Barbeau</h1>
			<h4 class='hero-subtitle'>Generative Artist based in Québec City</h4>
			<div class='socials'>
				<Socials />
			</div>
		</div>
	</section>
	<section class='work'>
		<div class='work-container'>
			<h2 class='work-title'>Recent Work</h2>

			<ul class="recent-work-list">
				{projects.map(work =>(

					<li class="recent-work-item">
						<hr />
						<div class='work-layout'>
							<div class='work-description'>
								<h3 class='work-description-title'>{work.data.title}</h3>
								<p class='work-description-info'>{work.data.subtitle}</p>
								<p class='work-description-text'>{work.data.description}</p>
								<a class='work-description-link button' href={work.data.url} target="_blank">
									View Project<Icon isButton={true} icon={'external'} />
								</a>
							</div>
							<div class='work-image-row'>
								{work.data.images.map(url => (
									<img src={url} alt='' class='work-image' />
								))}
							</div>
						</div>
					</li>
				))}
			</ul>
		</div>
	</section>
	<script>

		// make the images in the work section scrollable horizontally by dragging the mouse
		const workImageRow = document.querySelectorAll('.work-image-row');
		workImageRow.forEach((row) => {
			row.addEventListener('mousedown', (e:MouseEvent) => {
				e.preventDefault();
				const scrollLeft = row.scrollLeft;
				const mouseX = e.clientX;
				let mouseDown = true;

				row.addEventListener('mousemove', (e:MouseEvent) => {
					if (!mouseDown) return;
					const mouseMoveX = e.clientX;
					const scrollAmount = mouseMoveX - mouseX;
					row.scrollLeft = scrollLeft - scrollAmount;
				});

				// if the cursor leaves the row, stop scrolling
				row.addEventListener('mouseleave', () => {
					mouseDown = false;
				});


				row.addEventListener('mouseup', () => {
					mouseDown = false;
				});
			});
		});
	</script>
	<style>
		.hero-title {
			margin-bottom: 0.1em;
		}

		.socials {
			margin-top: 0.5rem;
		}

		.work-description {
			margin: 1em 0;
			max-width: 100%;
		}
		.work-description-info {
			margin: 0.15em 0;
			font-size: 0.8em;
			color: var(--accent-regular);
		}
		.work-description-text {
			line-height: 1.25em;
			margin: 0.5em 0 2em 0;
			white-space: pre-wrap;
		}
		.work-layout {
			display: flex;
			flex-direction: column;
			overflow-y: scroll;
			overflow-x: hidden;
			margin-top: 2em;
		}
		.work-image-row {
			display: flex;
			flex-direction: row;
			gap: 0.5em;
			overflow-y: hidden;
			overflow-x: scroll;
		}

		/* remove the scrollbar */
		.work-image-row::-webkit-scrollbar {
			display: none;
		}

		.work-image {
			max-height: 100%; /* Fill the cell's height */
			max-width: 100%;
			height: 300px;
			width: auto;
		}

		.recent-work-item{
			margin-top: 2em;
		}

		.button {
			padding: 0.5em 1em;
			border-radius: 50px;
			background-color: var(--gray-0);
			color: var(--gray-999);
			text-decoration: none;
			display: flex;
			align-items: center;
			justify-content: center;
			width: fit-content;
			margin: 1em 0;
		}

		/* media queries */
		/* desktop */

		@media (min-width: 1024px) {
			.work-image-row {
				overflow-y: hidden;
				overflow-x: scroll;
				cursor : grab;
				gap: 1em;
			}

			.work-image {
				max-height: 100%; /* Fill the cell's height */
				max-width: 100%;
				height: 600px;
				width: auto;
			}
			.work-description {
				margin: 1em 0;
				max-width: 75%;
			}
		}
			
	</style>
</BaseLayout>
