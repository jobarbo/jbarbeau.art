---
import {Debug} from 'astro/components';
import {getCollection} from 'astro:content';

import BaseLayout from '../layouts/BaseLayout.astro';

import ContactCTA from '../components/ContactCTA.astro';
import ExhibitionPreview from '../components/ExhibitionPreview.astro';
import Hero from '../components/Hero.astro';
import Grid from '../components/Grid.astro';

// get all the slugs from the collection excluding nested collections but return item slug only if it's at level: 1 else remove it from the array splice
const exhibition_slug_arr = await getCollection('exhibition').then((collection) => {
	const slugs = collection.map((item) => item.slug);
	const slugsLevel1 = slugs.filter((slug) => slug.split('/').length === 1);
	return slugsLevel1;
});

const response = await fetch('http://localhost:1337/api/exhibitions?populate=*');
const json = await response.json();
const baseURL = 'http://localhost:1337';

// convert the data to an array

interface Exhibition {
	id: number;
	attributes: {
		title: string;
		description: string;
		slug: string;
		image: {
			data: {
				attributes: {
					url: string;
					alternativeText: string;
				};
			};
		};
	};
}

const exhibitionsData: Exhibition[] = json.data;

// deconstruct exhibition data into a new object
const collectionName = `exhibition`;
const exhibitions = exhibitionsData.map((exhibition, index) => {
	const {id, attributes} = exhibition;
	const {title, description, image} = attributes;
	const slug = exhibition_slug_arr[index];
	const {data} = image;
	const {url: imageURL, alternativeText} = data.attributes;

	return {
		id,
		title,
		description,
		slug,
		image: {
			url: `${baseURL}${imageURL}`,
			alt: alternativeText,
		},
	};
});
---

<BaseLayout title='Expositions en cours' description='Exposition des oeuvres de Jonathan Barbeau'>
	<div class='stack gap-20'>
		<main class='wrapper stack gap-8'>
			<Hero title='Expositions' tagline='Voici mes expositions courantes et Ã  venir.' align='start' />
			<Grid variant='offset'>
				{
					exhibitions.map((project) => (
						<ExhibitionPreview
							type={collectionName}
							title={project.title}
							description={project.description}
							slug={project.slug}
							image={project.image.url}
							alt={project.image.alt}
						/>
					))
				}
			</Grid>
		</main>
		<ContactCTA />
	</div>
</BaseLayout>
