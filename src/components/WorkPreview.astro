---
import type {CollectionEntry} from 'astro:content';

interface Props {
	type: string;
	title: string;
	description: string;
	slug: string;
	image: string;
	alt?: string;
}

// deconstruct exhibition data into a new object

const {type, title, slug, description, image, alt} = Astro.props;
---

<!-- test -->
<a class='card' href={`/${type}/${slug}`}>
	<span class='title'>{title}</span>
	<img class='image' src={image} alt={alt || ''} loading='lazy' decoding='async' />
</a>

<style>
	.card {
		display: grid;
		grid-template: auto 1fr / auto 1fr;
		height: 11rem;
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
		border-radius: 0.75rem;
		overflow: hidden;
		box-shadow: var(--shadow-sm);
		text-decoration: none;
		font-family: var(--font-brand);
		font-size: var(--text-lg);
		font-weight: 500;
		transition: box-shadow 0.2s ease-in-out;
	}

	.card:hover {
		box-shadow: var(--shadow-md);
		text-decoration: none;
	}

	.card:hover .image {
		transform: scale(1.05);
	}

	.image {
		transition: transform 0.8s ease-in-out;
	}

	.title {
		grid-area: 1 / 1 / 2 / 2;
		z-index: 1;
		margin: 0.5rem;
		padding: 0.5rem 1rem;
		background: var(--gray-999);
		color: var(--gray-200);
		border-radius: 0.375rem;
		font-size: 16px;
	}

	.card:hover .title {
		text-decoration: none;
	}

	img {
		grid-area: 1 / 1 / 3 / 3;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	@media (min-width: 50em) {
		.card {
			height: 22rem;
			border-radius: 1.5rem;
		}

		.title {
			border-radius: 0.9375rem;
			font-size: 24px;
			padding: 0.5rem 2rem;
		}
	}
</style>
