---
import {Image} from "astro:assets";
import Socials from "./Socials.astro";
import Button from "./Button.astro";
import Icon from "./Icon.astro";

const {profileImage} = Astro.props;
---

<section class='hero'>
	<div class='hero-container'>
		<div class='hero-content'>
			<div class='hero-image'>
				<Image src={profileImage} alt='' class='work-image' width={300} height={200} loading='lazy' data-src={profileImage} />
			</div>
			<h1 data-split-text class='hero-title'>Jonathan Barbeau</h1>
			<h4 data-split-text class='hero-subtitle'>Generative Artist based in Qu√©bec City</h4>
			<div class='hero-socials'>
				<Socials />
			</div>
			<Button class='hero-button my-6' label='View my Artist Curriculum' href='/docs/artist-cv' target='_blank' icon='external' />
		</div>
		<div data-canvas class='hero-canvas'>
			<iframe
				id='generativeArtFrame'
				title='Generative Art'
				src=''
				allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'
				referrerpolicy='strict-origin-when-cross-origin'
				loading='lazy'
				allowfullscreen></iframe>
		</div>
		<div class='hero-iframe-info'>
			<p class='hero-iframe-name' id='projectName'></p>
			<div class='hero-iframe-hash-container'>
				<p class='hero-iframe-hash' id='randomHash'></p>
				<button class='copy-hash-btn' id='copyHashBtn' title='Copy full hash'>
					<Icon icon='copy' size='0.8em' />
				</button>
			</div>
			<div class='hero-iframe-buttons'>
				<Button label='New variations' icon='refresh' href='#' target='_self' attributes={{"data-refresh": "true"}} />
				<Button label='Fullscreen' icon='external' href='#' target='_blank' attributes={{"data-fullscreen": "true"}} />
			</div>
		</div>
	</div>
</section>

<style lang='scss'>
	@use "../styles/components/Hero.scss";
</style>

<script>
	import {gsap} from "gsap";
	import {ScrollTrigger} from "gsap/ScrollTrigger";
	import {SplitText} from "gsap/SplitText";

	gsap.registerPlugin(ScrollTrigger, SplitText);

	console.log(gsap, ScrollTrigger, SplitText);

	// split elements with the class "split" into words and characters
	let split = SplitText.create("[data-split-text]", {type: "words, chars"});

	// Set initial state - hide all characters
	gsap.set(split.chars, {autoAlpha: 0, y: 10, scale: 0.6});

	// Create a timeline to stagger between different elements
	let tl = gsap.timeline();

	// Animate each element's characters with a stagger between elements
	split.elements.forEach((element, index) => {
		tl.to(
			split.chars.filter((char) => element.contains(char)),
			{
				duration: 0.2,
				y: 0, // animate to original position
				autoAlpha: 1, // fade in to full opacity
				stagger: 0.05, // 0.05 seconds between each character
				ease: "back.out(1.27)", // ease out with a bit of overshoot
				scale: 1,
			},
			index === 0 ? 0 : index * 0.2 // first element starts immediately, others get increasing delay
		);
	});

	// gsap split text animation
</script>

<script src='/src/scripts/live_frame.js'></script>
